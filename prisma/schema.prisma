// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @default(uuid())
  login          String           @unique
  email          String           @unique
  password       String
  newsletter     Boolean
  isAdmin        Boolean
  savedQuestions SavedQuestions[]
  savedQuizzies  SavedQuiz[]
}

model SavedQuestions {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userID], references: [id])
  question   Question @relation(fields: [questionID], references: [id])
  quiz       Quiz     @relation(fields: [quizID], references: [id])
  userID     String
  questionID Int
  quizID     Int
}

model SavedQuiz {
  id             Int      @id @default(autoincrement())
  user           User     @relation(fields: [userID], references: [id])
  quiz           Quiz     @relation(fields: [quizName], references: [name])
  userID         String
  quizName       String
  questionNumber Int
  numberOfCorrectAnswer Int
  solvedQuizData Json
createdAt DateTime @default(now())
}

model Quiz {
  id                   Int              @id @default(autoincrement())
  name                 String           @unique
  description          String           @db.Text
  pathname             String
  isNew                Boolean
  isActive             Boolean
  randomize1Question   Boolean
  randomize20Questions Boolean
  randomizeXQuestions  Boolean
  rankedGame           Boolean
  showAllQuestions     Boolean
  printTest            Boolean
  competeWithFriends   Boolean
  questions            Question[]
  SavedQuestions       SavedQuestions[]
  savedQuizzies        SavedQuiz[]
}

enum AnswerOption {
  answerA
  answerB
  answerC
  answerD
}

model Question {
  id             Int              @id @default(autoincrement())
  quiz           Quiz             @relation(fields: [quizID], references: [id], onDelete: Cascade)
  question       String           @db.Text
  answerA        String           @db.Text
  answerB        String           @db.Text
  answerC        String           @db.Text
  answerD        String           @db.Text
  correctAnswer  AnswerOption
  quizID         Int
  SavedQuestions SavedQuestions[]
}
